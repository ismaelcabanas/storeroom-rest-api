/*
 * This file is generated by jOOQ.
*/
package cabanas.garcia.ismael.storeroom.module.product.infrastructure.repository.jooq.autogen.tables.records;


import cabanas.garcia.ismael.storeroom.module.product.infrastructure.repository.jooq.autogen.tables.Storerooms;

import java.sql.Timestamp;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Storeroom
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3",
        "schema version:storeroom_2018.10.19.0"
    },
    date = "2018-10-19T12:44:14.074Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StoreroomsRecord extends UpdatableRecordImpl<StoreroomsRecord> implements Record4<UUID, String, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1272398594;

    /**
     * Setter for <code>storeroom.storerooms.s_id</code>. Private storeroom identifier
     */
    public void setSId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>storeroom.storerooms.s_id</code>. Private storeroom identifier
     */
    public UUID getSId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>storeroom.storerooms.s_name</code>. Name of the storeroom
     */
    public void setSName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>storeroom.storerooms.s_name</code>. Name of the storeroom
     */
    public String getSName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>storeroom.storerooms.s_creation</code>. Time instant when it is created
     */
    public void setSCreation(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>storeroom.storerooms.s_creation</code>. Time instant when it is created
     */
    public Timestamp getSCreation() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>storeroom.storerooms.s_modification</code>. Instant of the last update
     */
    public void setSModification(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>storeroom.storerooms.s_modification</code>. Instant of the last update
     */
    public Timestamp getSModification() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UUID, String, Timestamp, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UUID, String, Timestamp, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field1() {
        return Storerooms.STOREROOMS.S_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Storerooms.STOREROOMS.S_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return Storerooms.STOREROOMS.S_CREATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Storerooms.STOREROOMS.S_MODIFICATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value1() {
        return getSId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getSCreation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getSModification();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StoreroomsRecord value1(UUID value) {
        setSId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StoreroomsRecord value2(String value) {
        setSName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StoreroomsRecord value3(Timestamp value) {
        setSCreation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StoreroomsRecord value4(Timestamp value) {
        setSModification(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StoreroomsRecord values(UUID value1, String value2, Timestamp value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StoreroomsRecord
     */
    public StoreroomsRecord() {
        super(Storerooms.STOREROOMS);
    }

    /**
     * Create a detached, initialised StoreroomsRecord
     */
    public StoreroomsRecord(UUID sId, String sName, Timestamp sCreation, Timestamp sModification) {
        super(Storerooms.STOREROOMS);

        set(0, sId);
        set(1, sName);
        set(2, sCreation);
        set(3, sModification);
    }
}
