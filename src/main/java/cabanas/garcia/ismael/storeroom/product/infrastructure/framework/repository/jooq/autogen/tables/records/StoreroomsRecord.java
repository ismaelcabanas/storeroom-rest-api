/*
 * This file is generated by jOOQ.
*/
package cabanas.garcia.ismael.storeroom.product.infrastructure.framework.repository.jooq.autogen.tables.records;


import cabanas.garcia.ismael.storeroom.product.infrastructure.framework.repository.jooq.autogen.tables.Storerooms;

import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Storeroom
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3",
        "schema version:storeroom_2018.10.16.1"
    },
    date = "2018-10-16T19:46:42.297Z",
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StoreroomsRecord extends UpdatableRecordImpl<StoreroomsRecord> implements Record2<UUID, String> {

    private static final long serialVersionUID = -861914252;

    /**
     * Setter for <code>storeroom.storerooms.s_id</code>. Private storeroom identifier
     */
    public void setSId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>storeroom.storerooms.s_id</code>. Private storeroom identifier
     */
    public UUID getSId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>storeroom.storerooms.s_name</code>. Name of the storeroom
     */
    public void setSName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>storeroom.storerooms.s_name</code>. Name of the storeroom
     */
    public String getSName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<UUID, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<UUID, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field1() {
        return Storerooms.STOREROOMS.S_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Storerooms.STOREROOMS.S_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value1() {
        return getSId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StoreroomsRecord value1(UUID value) {
        setSId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StoreroomsRecord value2(String value) {
        setSName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StoreroomsRecord values(UUID value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StoreroomsRecord
     */
    public StoreroomsRecord() {
        super(Storerooms.STOREROOMS);
    }

    /**
     * Create a detached, initialised StoreroomsRecord
     */
    public StoreroomsRecord(UUID sId, String sName) {
        super(Storerooms.STOREROOMS);

        set(0, sId);
        set(1, sName);
    }
}
